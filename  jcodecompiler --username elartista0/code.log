¬comment {} = forward reference
¬comment [] = char list, ^ negative
¬comment () = block
¬comment \ = escape char, \01, \02... forward reference
¬comment ¬linedef cmp dword [ebp*],*
¬comment ¬db &H81,&H7D ¬comment cmp [ebp+x],y
¬comment ¬db \01
¬comment ¬dd \02
¬comment ¬
00000000: ¬define $FormNumber 0    ¬comment &H00000000 = 0
¬comment begin file
¬comment define $ImageBase &H400000
00000000: ¬define $ImageBase 4194304    ¬comment &H00400000 = &H400000
¬comment down level 0
¬comment define $RVABase 0
00000000: ¬define $RVABase 0    ¬comment &H00000000 = 0
¬comment down level 0
¬comment $image_start:
00000000: ¬define $image_start 4194304    ¬comment &H00400000 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment db "MZ"
00000000: ¬db 'MZ'
¬comment down level 0
¬comment dw &H80 ;Stub size
¬comment dw &H80
00000002: ¬dw &H80
¬comment down level 0
¬comment down level 0
¬comment dw 1 ;no relocations
¬comment dw 1
00000004: ¬dw 1
¬comment down level 0
¬comment down level 0
¬comment dw 0
00000006: ¬dw 0
¬comment down level 0
¬comment dw 4 ; 4-para header
¬comment dw 4
00000008: ¬dw 4
¬comment down level 0
¬comment down level 0
¬comment dw &H10 ; 16 extra para for stack
¬comment dw &H10
0000000A: ¬dw &H10
¬comment down level 0
¬comment down level 0
¬comment dw -1 ; maximum extra paras: LOTS
¬comment dw -1
0000000C: ¬dw -1
¬comment down level 0
¬comment down level 0
¬comment dw 0,&H140 ; SS:SP = 0000:0140
¬comment dw 0,&H140
0000000E: ¬dw 0
00000010: ¬dw &H140
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; no checksum
¬comment dw 0
00000012: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0,0 ; CS:IP = 0:0, start at beginning
¬comment dw 0,0
00000014: ¬dw 0
00000016: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw &H40 ; reloc table beyond hdr
¬comment dw &H40
00000018: ¬dw &H40
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; overlay number
¬comment dw 0
0000001A: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0,0,0,0 ; reserved
¬comment dw 0,0,0,0
0000001C: ¬dw 0
0000001E: ¬dw 0
00000020: ¬dw 0
00000022: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0,0 ; OEM id and OEM info
¬comment dw 0,0
00000024: ¬dw 0
00000026: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0,0,0,0,0,0,0,0,0,0 ; reserved
¬comment dw 0,0,0,0,0,0,0,0,0,0
00000028: ¬dw 0
0000002A: ¬dw 0
0000002C: ¬dw 0
0000002E: ¬dw 0
00000030: ¬dw 0
00000032: ¬dw 0
00000034: ¬dw 0
00000036: ¬dw 0
00000038: ¬dw 0
0000003A: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd &H80 ; offset PE header
¬comment dd &H80
0000003C: ¬dd &H80
¬comment down level 0
¬comment down level 0
¬comment db &H0E,&H1F,&HBA,&HE,0,&HB4,&H09,&HCD,&H21,&HB8,1,&H4C,&HCD,&H21
00000040: ¬db &H0E
00000041: ¬db &H1F
00000042: ¬db &HBA
00000043: ¬db &HE
00000044: ¬db 0
00000045: ¬db &HB4
00000046: ¬db &H09
00000047: ¬db &HCD
00000048: ¬db &H21
00000049: ¬db &HB8
0000004A: ¬db 1
0000004B: ¬db &H4C
0000004C: ¬db &HCD
0000004D: ¬db &H21
¬comment down level 0
¬comment ;db 'This program cannot be run in DOS mode.',0Dh,0Ah,24h
¬comment down level 0
¬comment db 'Este programa no funciona desde modo DOS.',&H0D,&H0A,&H24
0000004E: ¬db 'Este programa no funciona desde modo DOS.'
00000077: ¬db &H0D
00000078: ¬db &H0A
00000079: ¬db &H24
¬comment down level 0
¬comment align &H80
0000007A: ¬align &H80
¬comment down level 0
¬comment PE_Stub:
00000080: ¬define PE_Stub 4194432    ¬comment &H00400080 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment db "PE",0,0
00000080: ¬db 'PE'
00000082: ¬db 0
00000083: ¬db 0
¬comment down level 0
¬comment dw &H014C ; 386-compatible
¬comment dw &H014C
00000084: ¬dw &H014C
¬comment down level 0
¬comment down level 0
¬comment dw 4 ; number of sections
¬comment dw 4
00000086: ¬dw 4
¬comment down level 0
¬comment down level 0
¬comment dd ¬timestamp ; Time and date when the file was created
¬comment dd ¬timestamp
00000088: ¬dd 1194459651
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToSymbolTable
¬comment dd 0
0000008C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; NumberOfSymbols
¬comment dd 0
00000090: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw &HE0 ; SizeOfOptionalHeader
¬comment dw &HE0
00000094: ¬dw &HE0
¬comment down level 0
¬comment down level 0
¬comment dw &H10E ;Characteristics
¬comment dw &H10E
00000096: ¬dw &H10E
¬comment down level 0
¬comment down level 0
¬comment ; IMAGE_FILE_RELOCS_STRIPPED 0x0001 // Relocation info stripped from file.
¬comment down level 0
¬comment ; IMAGE_FILE_EXECUTABLE_IMAGE 0x0002 // File is executable (i.e. no unresolved externel references).
¬comment down level 0
¬comment ; IMAGE_FILE_LINE_NUMS_STRIPPED 0x0004 // Line nunbers stripped from file.
¬comment down level 0
¬comment ; IMAGE_FILE_LOCAL_SYMS_STRIPPED 0x0008 // Local symbols stripped from file.
¬comment down level 0
¬comment ; IMAGE_FILE_32BIT_MACHINE 0x0100 // 32 bit word machine.
¬comment down level 0
¬comment dw &H10B ;Magic for a normal executable/DLL.
¬comment dw &H10B
00000098: ¬dw &H10B
¬comment down level 0
¬comment down level 0
¬comment db 1 ;MajorLinkerVersion;
¬comment db 1
0000009A: ¬db 1
¬comment down level 0
¬comment down level 0
¬comment db &H43 ;MinorLinkerVersion;
¬comment db &H43
0000009B: ¬db &H43
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;SizeOfCode;
¬comment dd 0
0000009C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;SizeOfInitializedData;
¬comment dd 0
000000A0: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;SizeOfUninitializedData;
¬comment dd 0
000000A4: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd $EntryPoint - $ImageBase ;RVA AddressOfEntryPoint;
¬comment dd $EntryPoint - $ImageBase
000000A8: ¬comment recall 168 $EntryPoint - 4194304
000000A8: ¬dd $EntryPoint - 4194304
¬comment down level 0
¬comment down level 0
¬comment dd $code_start ;BaseOfCode;
¬comment dd $code_start
000000AC: ¬comment recall 172 $code_start
000000AC: ¬dd $code_start
¬comment down level 0
¬comment down level 0
¬comment dd $data_start ;BaseOfData;
¬comment dd $data_start
000000B0: ¬comment recall 176 $data_start
000000B0: ¬dd $data_start
¬comment down level 0
¬comment down level 0
¬comment dd $ImageBase ;ImageBase;
¬comment dd $ImageBase
000000B4: ¬dd 4194304
¬comment down level 0
¬comment down level 0
¬comment dd &H100000 ;SectionAlignment;
¬comment dd &H100000
000000B8: ¬dd &H100000
¬comment down level 0
¬comment down level 0
¬comment dd &H200 ;FileAlignment;
¬comment dd &H200
000000BC: ¬dd &H200
¬comment down level 0
¬comment down level 0
¬comment dw 1 ;MajorOperatingSystemVersion;
¬comment dw 1
000000C0: ¬dw 1
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MinorOperatingSystemVersion;
¬comment dw 0
000000C2: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MajorImageVersion;
¬comment dw 0
000000C4: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MinorImageVersion;
¬comment dw 0
000000C6: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 4 ;MajorSubsystemVersion;
¬comment dw 4
000000C8: ¬dw 4
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MinorSubsystemVersion;
¬comment dw 0
000000CA: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;Win32VersionValue;
¬comment dd 0
000000CC: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd $image_end - $ImageBase ;SizeOfImage;
¬comment dd $image_end - $ImageBase
000000D0: ¬comment recall 208 $image_end - 4194304
000000D0: ¬dd $image_end - 4194304
¬comment down level 0
¬comment down level 0
¬comment dd $header_end - $image_start ;SizeOfHeaders;
¬comment dd $header_end - $image_start
000000D4: ¬comment recall 212 $header_end - 4194304
000000D4: ¬dd $header_end - 4194304
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;CheckSum;
¬comment dd 0
000000D8: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 2 ;Subsystem; IMAGE_SUBSYSTEM_WINDOWS_GUI
¬comment dw 2
000000DC: ¬dw 2
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;DllCharacteristics;
¬comment dw 0
000000DE: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd &H100000 ;SizeOfStackReserve;
¬comment dd &H100000
000000E0: ¬dd &H100000
¬comment down level 0
¬comment down level 0
¬comment dd &H100000 ;SizeOfStackCommit;
¬comment dd &H100000
000000E4: ¬dd &H100000
¬comment down level 0
¬comment down level 0
¬comment dd &H100000 ;SizeOfHeapReserve;
¬comment dd &H100000
000000E8: ¬dd &H100000
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;SizeOfHeapCommit;
¬comment dd 0
000000EC: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;LoaderFlags;
¬comment dd 0
000000F0: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 16 ;NumberOfRvaAndSizes;
¬comment dd 16
000000F4: ¬dd 16
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ;Directory1 edata RVa, Size
¬comment dd 0,0
000000F8: ¬dd 0
000000FC: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd $idata_start - $ImageBase,$idata_end - $idata_start ;Directory2 idata RVa, Size
¬comment dd $idata_start - $ImageBase,$idata_end - $idata_start
00000100: ¬comment recall 256 $idata_start - 4194304
00000100: ¬dd $idata_start - 4194304
00000104: ¬comment recall 260 $idata_end - $idata_start
00000104: ¬dd $idata_end - $idata_start
¬comment down level 0
¬comment down level 0
¬comment dd $rsrc_start - $ImageBase,$rsrc_end - $rsrc_start ; Directory 3 .rsrc
¬comment dd $rsrc_start - $ImageBase,$rsrc_end - $rsrc_start
00000108: ¬comment recall 264 $rsrc_start - 4194304
00000108: ¬dd $rsrc_start - 4194304
0000010C: ¬comment recall 268 $rsrc_end - $rsrc_start
0000010C: ¬dd $rsrc_end - $rsrc_start
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 4
¬comment dd 0,0
00000110: ¬dd 0
00000114: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 5
¬comment dd 0,0
00000118: ¬dd 0
0000011C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 6
¬comment dd 0,0
00000120: ¬dd 0
00000124: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 7
¬comment dd 0,0
00000128: ¬dd 0
0000012C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 8
¬comment dd 0,0
00000130: ¬dd 0
00000134: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 9
¬comment dd 0,0
00000138: ¬dd 0
0000013C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 10
¬comment dd 0,0
00000140: ¬dd 0
00000144: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 11
¬comment dd 0,0
00000148: ¬dd 0
0000014C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 12
¬comment dd 0,0
00000150: ¬dd 0
00000154: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 13
¬comment dd 0,0
00000158: ¬dd 0
0000015C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 14
¬comment dd 0,0
00000160: ¬dd 0
00000164: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 15
¬comment dd 0,0
00000168: ¬dd 0
0000016C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0,0 ; Directory 16
¬comment dd 0,0
00000170: ¬dd 0
00000174: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment db '.idata',0,0
00000178: ¬db '.idata'
0000017E: ¬db 0
0000017F: ¬db 0
¬comment down level 0
¬comment dd $idata_end - $idata_start
00000180: ¬comment recall 384 $idata_end - $idata_start
00000180: ¬dd $idata_end - $idata_start
¬comment down level 0
¬comment dd $idata_start - $ImageBase ; VirtualAddress;
¬comment dd $idata_start - $ImageBase
00000184: ¬comment recall 388 $idata_start - 4194304
00000184: ¬dd $idata_start - 4194304
¬comment down level 0
¬comment down level 0
¬comment dd $idata_end_aligned - $idata_start ; SizeOfRawData; Size aligned to FileAlign
¬comment dd $idata_end_aligned - $idata_start
00000188: ¬comment recall 392 $idata_end_aligned - $idata_start
00000188: ¬dd $idata_end_aligned - $idata_start
¬comment down level 0
¬comment down level 0
¬comment dd $idata_file_start ; PointerToRawData;
¬comment dd $idata_file_start
0000018C: ¬comment recall 396 $idata_file_start
0000018C: ¬dd $idata_file_start
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToRelocations;
¬comment dd 0
00000190: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToLinenumbers;
¬comment dd 0
00000194: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfRelocations;
¬comment dw 0
00000198: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfLinenumbers;
¬comment dw 0
0000019A: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd &HC0000040 ; Characteristics;
¬comment dd &HC0000040
0000019C: ¬dd &HC0000040
¬comment down level 0
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_WRITE 0x80000000 // Section is writeable.
¬comment down level 0
¬comment ;IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040 // Section contains initialized data.
¬comment down level 0
¬comment db '.rsrc',0,0,0
000001A0: ¬db '.rsrc'
000001A5: ¬db 0
000001A6: ¬db 0
000001A7: ¬db 0
¬comment down level 0
¬comment dd $rsrc_end - $rsrc_start
000001A8: ¬comment recall 424 $rsrc_end - $rsrc_start
000001A8: ¬dd $rsrc_end - $rsrc_start
¬comment down level 0
¬comment dd $rsrc_start - $ImageBase ; VirtualAddress;
¬comment dd $rsrc_start - $ImageBase
000001AC: ¬comment recall 428 $rsrc_start - 4194304
000001AC: ¬dd $rsrc_start - 4194304
¬comment down level 0
¬comment down level 0
¬comment dd $rsrc_end_aligned - $rsrc_start ; SizeOfRawData; Size aligned to FileAlign
¬comment dd $rsrc_end_aligned - $rsrc_start
000001B0: ¬comment recall 432 $rsrc_end_aligned - $rsrc_start
000001B0: ¬dd $rsrc_end_aligned - $rsrc_start
¬comment down level 0
¬comment down level 0
¬comment dd $rsrc_file_start ; PointerToRawData;
¬comment dd $rsrc_file_start
000001B4: ¬comment recall 436 $rsrc_file_start
000001B4: ¬dd $rsrc_file_start
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToRelocations;
¬comment dd 0
000001B8: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToLinenumbers;
¬comment dd 0
000001BC: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfRelocations;
¬comment dw 0
000001C0: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfLinenumbers;
¬comment dw 0
000001C2: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd &H40000040 ; Characteristics;
¬comment dd &H40000040
000001C4: ¬dd &H40000040
¬comment down level 0
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
¬comment down level 0
¬comment ;IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040 // Section contains initialized data.
¬comment down level 0
¬comment db '.code',0,0,0
000001C8: ¬db '.code'
000001CD: ¬db 0
000001CE: ¬db 0
000001CF: ¬db 0
¬comment down level 0
¬comment dd $code_end - $code_start
000001D0: ¬comment recall 464 $code_end - $code_start
000001D0: ¬dd $code_end - $code_start
¬comment down level 0
¬comment dd $code_start ; VirtualAddress;
¬comment dd $code_start
000001D4: ¬comment recall 468 $code_start
000001D4: ¬dd $code_start
¬comment down level 0
¬comment down level 0
¬comment dd $code_end_aligned - $code_start ; SizeOfRawData; Size aligned to FileAlign
¬comment dd $code_end_aligned - $code_start
000001D8: ¬comment recall 472 $code_end_aligned - $code_start
000001D8: ¬dd $code_end_aligned - $code_start
¬comment down level 0
¬comment down level 0
¬comment dd $code_file_start ; PointerToRawData;
¬comment dd $code_file_start
000001DC: ¬comment recall 476 $code_file_start
000001DC: ¬dd $code_file_start
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToRelocations;
¬comment dd 0
000001E0: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToLinenumbers;
¬comment dd 0
000001E4: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfRelocations;
¬comment dw 0
000001E8: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfLinenumbers;
¬comment dw 0
000001EA: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd &H60000020 ; Characteristics;
¬comment dd &H60000020
000001EC: ¬dd &H60000020
¬comment down level 0
¬comment down level 0
¬comment ;IMAGE_SCN_CNT_CODE 0x00000020 // Section contains code.
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_EXECUTE 0x20000000 // Section is executable.
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
¬comment down level 0
¬comment ;.data section
¬comment down level 0
¬comment db '.data',0,0,0
000001F0: ¬db '.data'
000001F5: ¬db 0
000001F6: ¬db 0
000001F7: ¬db 0
¬comment down level 0
¬comment dd $data_end - $data_start ; VirtualSize;
¬comment dd $data_end - $data_start
000001F8: ¬comment recall 504 $data_end - $data_start
000001F8: ¬dd $data_end - $data_start
¬comment down level 0
¬comment down level 0
¬comment dd $data_start ; VirtualAddress;
¬comment dd $data_start
000001FC: ¬comment recall 508 $data_start
000001FC: ¬dd $data_start
¬comment down level 0
¬comment down level 0
¬comment dd $data_end_aligned - $data_start ; SizeOfRawData; Size aligned to FileAlign
¬comment dd $data_end_aligned - $data_start
00000200: ¬comment recall 512 $data_end_aligned - $data_start
00000200: ¬dd $data_end_aligned - $data_start
¬comment down level 0
¬comment down level 0
¬comment dd $data_file_start ; PointerToRawData;
¬comment dd $data_file_start
00000204: ¬comment recall 516 $data_file_start
00000204: ¬dd $data_file_start
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToRelocations;
¬comment dd 0
00000208: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ; PointerToLinenumbers;
¬comment dd 0
0000020C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfRelocations;
¬comment dw 0
00000210: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ; NumberOfLinenumbers;
¬comment dw 0
00000212: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dd &HC0000040 ; Characteristics;
¬comment dd &HC0000040
00000214: ¬dd &HC0000040
¬comment down level 0
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
¬comment down level 0
¬comment ;IMAGE_SCN_MEM_WRITE 0x80000000 // Section is writeable.
¬comment down level 0
¬comment ;IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040 // Section contains initialized data.
¬comment down level 0
¬comment align &H200
00000218: ¬align &H200
¬comment down level 0
¬comment $header_end:
00000400: ¬define $header_end 4195328    ¬comment &H00400400 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment down level 0
¬comment begin section .idata
00000400: ¬define $RVABase 1047552    ¬comment &H000FFC00 = $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
00000400: ¬define $idata_file_start 1024    ¬comment &H00000400 = ¬curpos
¬comment $idata_start:
00000400: ¬define $idata_start 5242880    ¬comment &H00500000 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment down level 0
¬comment library KERNEL32.DLL
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment (*)
¬comment import GetModuleHandleA
¬comment import GetModuleHandleA as GetModuleHandleA
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment down level 0
¬comment (*)
¬comment import ExitProcess
¬comment import ExitProcess as ExitProcess
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment down level 0
¬comment library USER32.DLL
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment import DialogBoxParamA
¬comment import DialogBoxParamA as DialogBoxParamA
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment down level 0
¬comment (*,*,*,*)
¬comment import MessageBoxA
¬comment import MessageBoxA as MessageBoxA
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment down level 0
¬comment (*,*)
¬comment import EndDialog
¬comment import EndDialog as EndDialog
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment down level 0
¬comment end section .idata
¬comment $idata_libraries
00000400: ¬comment recall 1024 $OriginalFirstThunk1 - 4194304
00000400: ¬dd $OriginalFirstThunk1 - 4194304
00000404: ¬dd 0
00000408: ¬dd 0
0000040C: ¬comment recall 1036 $DLLName2 - 4194304
0000040C: ¬dd $DLLName2 - 4194304
00000410: ¬comment recall 1040 $FirstThunk3 - 4194304
00000410: ¬dd $FirstThunk3 - 4194304
¬comment down level 0
00000414: ¬comment recall 1044 $OriginalFirstThunk9 - 4194304
00000414: ¬dd $OriginalFirstThunk9 - 4194304
00000418: ¬dd 0
0000041C: ¬dd 0
00000420: ¬comment recall 1056 $DLLName10 - 4194304
00000420: ¬dd $DLLName10 - 4194304
00000424: ¬comment recall 1060 $FirstThunk11 - 4194304
00000424: ¬dd $FirstThunk11 - 4194304
¬comment down level 0
¬comment bloque vacio
00000428: ¬dd 0
0000042C: ¬dd 0
00000430: ¬dd 0
00000434: ¬dd 0
00000438: ¬dd 0
¬comment $idata_definitions
0000043C: ¬define $DLLName2 5242940    ¬comment &H0050003C = ¬curpos + $ImageBase + $RVABase
0000043C: ¬db 'KERNEL32.DLL'
00000448: ¬db 0
00000449: ¬db 0
0000044A: ¬define $OriginalFirstThunk1 5242954    ¬comment &H0050004A = ¬curpos + $ImageBase + $RVABase
¬comment $LibraryOriginalImports4
0000044A: ¬comment recall 1098 $FNLib7 - 4194304
0000044A: ¬dd $FNLib7 - 4194304
¬comment down level 0
0000044E: ¬comment recall 1102 $FNLib8 - 4194304
0000044E: ¬dd $FNLib8 - 4194304
¬comment down level 0
00000452: ¬dd 0
00000456: ¬define $FirstThunk3 5242966    ¬comment &H00500056 = ¬curpos + $ImageBase + $RVABase
¬comment $LibraryThunkImports5
00000456: ¬define GetModuleHandleA_ADDR 5242966    ¬comment &H00500056 = ¬curpos + $ImageBase + $RVABase
00000456: ¬comment recall 1110 $FNLib7 - 4194304
00000456: ¬dd $FNLib7 - 4194304
¬comment down level 0
0000045A: ¬define ExitProcess_ADDR 5242970    ¬comment &H0050005A = ¬curpos + $ImageBase + $RVABase
0000045A: ¬comment recall 1114 $FNLib8 - 4194304
0000045A: ¬dd $FNLib8 - 4194304
¬comment down level 0
0000045E: ¬dd 0
¬comment $LibraryFunctionsImports6
00000462: ¬define $FNLib7 5242978    ¬comment &H00500062 = ¬curpos + $ImageBase + $RVABase
00000462: ¬db 0
00000463: ¬db 0
00000464: ¬db 'GetModuleHandleA'
00000474: ¬db 0
¬comment down level 0
00000475: ¬define $FNLib8 5242997    ¬comment &H00500075 = ¬curpos + $ImageBase + $RVABase
00000475: ¬db 0
00000476: ¬db 0
00000477: ¬db 'ExitProcess'
00000482: ¬db 0
¬comment down level 0
¬comment down level 0
00000483: ¬define $DLLName10 5243011    ¬comment &H00500083 = ¬curpos + $ImageBase + $RVABase
00000483: ¬db 'USER32.DLL'
0000048D: ¬db 0
0000048E: ¬db 0
0000048F: ¬define $OriginalFirstThunk9 5243023    ¬comment &H0050008F = ¬curpos + $ImageBase + $RVABase
¬comment $LibraryOriginalImports12
0000048F: ¬comment recall 1167 $FNLib15 - 4194304
0000048F: ¬dd $FNLib15 - 4194304
¬comment down level 0
00000493: ¬comment recall 1171 $FNLib16 - 4194304
00000493: ¬dd $FNLib16 - 4194304
¬comment down level 0
00000497: ¬comment recall 1175 $FNLib17 - 4194304
00000497: ¬dd $FNLib17 - 4194304
¬comment down level 0
0000049B: ¬dd 0
0000049F: ¬define $FirstThunk11 5243039    ¬comment &H0050009F = ¬curpos + $ImageBase + $RVABase
¬comment $LibraryThunkImports13
0000049F: ¬define DialogBoxParamA_ADDR 5243039    ¬comment &H0050009F = ¬curpos + $ImageBase + $RVABase
0000049F: ¬comment recall 1183 $FNLib15 - 4194304
0000049F: ¬dd $FNLib15 - 4194304
¬comment down level 0
000004A3: ¬define MessageBoxA_ADDR 5243043    ¬comment &H005000A3 = ¬curpos + $ImageBase + $RVABase
000004A3: ¬comment recall 1187 $FNLib16 - 4194304
000004A3: ¬dd $FNLib16 - 4194304
¬comment down level 0
000004A7: ¬define EndDialog_ADDR 5243047    ¬comment &H005000A7 = ¬curpos + $ImageBase + $RVABase
000004A7: ¬comment recall 1191 $FNLib17 - 4194304
000004A7: ¬dd $FNLib17 - 4194304
¬comment down level 0
000004AB: ¬dd 0
¬comment $LibraryFunctionsImports14
000004AF: ¬define $FNLib15 5243055    ¬comment &H005000AF = ¬curpos + $ImageBase + $RVABase
000004AF: ¬db 0
000004B0: ¬db 0
000004B1: ¬db 'DialogBoxParamA'
000004C0: ¬db 0
¬comment down level 0
000004C1: ¬define $FNLib16 5243073    ¬comment &H005000C1 = ¬curpos + $ImageBase + $RVABase
000004C1: ¬db 0
000004C2: ¬db 0
000004C3: ¬db 'MessageBoxA'
000004CE: ¬db 0
¬comment down level 0
000004CF: ¬define $FNLib17 5243087    ¬comment &H005000CF = ¬curpos + $ImageBase + $RVABase
000004CF: ¬db 0
000004D0: ¬db 0
000004D1: ¬db 'EndDialog'
000004DA: ¬db 0
¬comment down level 0
¬comment down level 0
¬comment $idata_end:
000004DB: ¬define $idata_end 5243099    ¬comment &H005000DB = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment align &H200
000004DB: ¬align &H200
¬comment down level 0
¬comment $idata_end_aligned:
00000600: ¬define $idata_end_aligned 5243392    ¬comment &H00500200 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment down level 0
¬comment begin section .rsrc
00000600: ¬define $RVABase 2095616    ¬comment &H001FFA00 = $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
00000600: ¬define $rsrc_file_start 1536    ¬comment &H00000600 = ¬curpos
¬comment $rsrc_start:
00000600: ¬define $rsrc_start 6291456    ¬comment &H00600000 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;Characteristics;
¬comment dd 0
00000600: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;TimeDateStamp;
¬comment dd 0
00000604: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MajorVersion;
¬comment dw 0
00000608: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MinorVersion;
¬comment dw 0
0000060A: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;NumberOfNamedEntries;
¬comment dw 0
0000060C: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 1 ;NumberOfIdEntries;
¬comment dw 1
0000060E: ¬dw 1
¬comment down level 0
¬comment down level 0
¬comment dd 5 ;Type
¬comment dd 5
00000610: ¬dd 5
¬comment down level 0
¬comment down level 0
¬comment dd $direntry1 - $rsrc_start + &H80000000 ;Type
¬comment dd $direntry1 - $rsrc_start + &H80000000
00000614: ¬comment recall 1556 $direntry1 - 6291456 + &H80000000
00000614: ¬dd $direntry1 - 6291456 + &H80000000
¬comment down level 0
¬comment down level 0
¬comment $direntry1:
00000618: ¬define $direntry1 6291480    ¬comment &H00600018 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment dd 0 ;Characteristics;
¬comment dd 0
00000618: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;TimeDateStamp;
¬comment dd 0
0000061C: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MajorVersion;
¬comment dw 0
00000620: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MinorVersion;
¬comment dw 0
00000622: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;NumberOfNamedEntries;
¬comment dw 0
00000624: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 1 ;NumberOfIdEntries;
¬comment dw 1
00000626: ¬dw 1
¬comment down level 0
¬comment down level 0
¬comment ¬define ID_FormMiPrimerDialogo 20
¬comment dd ID_FormMiPrimerDialogo ;ID_DIALOG1
¬comment dd ID_FormMiPrimerDialogo
00000628: ¬comment recall 1576 ID_FormMiPrimerDialogo
00000628: ¬dd ID_FormMiPrimerDialogo
¬comment down level 0
¬comment down level 0
¬comment dd $direntry2 - $rsrc_start + &H80000000 ;Type
¬comment dd $direntry2 - $rsrc_start + &H80000000
0000062C: ¬comment recall 1580 $direntry2 - 6291456 + &H80000000
0000062C: ¬dd $direntry2 - 6291456 + &H80000000
¬comment down level 0
¬comment down level 0
¬comment $direntry2:
00000630: ¬define $direntry2 6291504    ¬comment &H00600030 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment dd 0 ;Characteristics;
¬comment dd 0
00000630: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dd 0 ;TimeDateStamp;
¬comment dd 0
00000634: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MajorVersion;
¬comment dw 0
00000638: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;MinorVersion;
¬comment dw 0
0000063A: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 0 ;NumberOfNamedEntries;
¬comment dw 0
0000063C: ¬dw 0
¬comment down level 0
¬comment down level 0
¬comment dw 1 ;NumberOfIdEntries;
¬comment dw 1
0000063E: ¬dw 1
¬comment down level 0
¬comment down level 0
¬comment dd &H0409 ;Language
¬comment dd &H0409
00000640: ¬dd &H0409
¬comment down level 0
¬comment down level 0
¬comment dd $dialogs - $rsrc_start
00000644: ¬comment recall 1604 $dialogs - 6291456
00000644: ¬dd $dialogs - 6291456
¬comment down level 0
¬comment $dialogs:
00000648: ¬define $dialogs 6291528    ¬comment &H00600048 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment dd FormMiPrimerDialogo ;DataPtr
¬comment dd FormMiPrimerDialogo
00000648: ¬comment recall 1608 FormMiPrimerDialogo
00000648: ¬dd FormMiPrimerDialogo
¬comment down level 0
¬comment down level 0
¬comment dd FormMiPrimerDialogo_Size ;Size
¬comment dd FormMiPrimerDialogo_Size
0000064C: ¬comment recall 1612 FormMiPrimerDialogo_Size
0000064C: ¬dd FormMiPrimerDialogo_Size
¬comment down level 0
¬comment down level 0
¬comment dd 0,0
00000650: ¬dd 0
00000654: ¬dd 0
¬comment down level 0
¬comment Begin VB.Form FormMiPrimerDialogo
00000658: ¬define FormMiPrimerDialogo 2097240    ¬comment &H00200058 = ¬curpos + $RVABase
00000658: ¬define $FormNumber 1    ¬comment &H00000001 = $FormNumber + 1
00000658: ¬define ID_FormMiPrimerDialogo 1    ¬comment &H00000001 = $FormNumber
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
00000658: ¬define $DialogItems 
¬comment level 1
00000658: ¬define $DialogItems 0    ¬comment &H00000000 = 0
¬comment level 1
¬comment down level 0
¬comment Caption = "Mi primer diálogo parametrizado"
¬comment level 1
¬comment down level 0
¬comment ClientLeft = 120
00000658: ¬define $ClientLeft18 8    ¬comment &H00000008 = 120/15
¬comment down level 0
¬comment ClientTop = 120
00000658: ¬define $ClientTop19 8    ¬comment &H00000008 = 120/15
¬comment down level 0
¬comment ClientWidth = 2512
00000658: ¬define $ClientWidth20 167    ¬comment &H000000A7 = 2512/15
¬comment down level 0
¬comment ClientHeight = 2512
00000658: ¬define $ClientHeight21 167    ¬comment &H000000A7 = 2512/15
¬comment down level 0
¬comment Begin VB.Label LAEtiqueta
¬comment WS_CHILD+WS_VISIBLE
00000658: ¬define $Style 1342177280    ¬comment &H50000000 = &H50000000
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment Caption = "Etiqueta"
¬comment level 1
¬comment down level 0
¬comment Left = 120
00000658: ¬define $Left23 8    ¬comment &H00000008 = 120/15
¬comment down level 0
¬comment Top = 120
00000658: ¬define $Top24 8    ¬comment &H00000008 = 120/15
¬comment down level 0
¬comment Width = 480
00000658: ¬define $Width25 32    ¬comment &H00000020 = 480/15
¬comment down level 0
¬comment Height = 195
00000658: ¬define $Height26 13    ¬comment &H0000000D = 195/15
¬comment down level 0
¬comment End
¬comment level 1
00000658: ¬define $DialogItems 1    ¬comment &H00000001 = $DialogItems + 1
¬comment down level 0
¬comment Begin VB.Label LACodContexto
¬comment WS_CHILD+WS_VISIBLE
00000658: ¬define $Style 1342177280    ¬comment &H50000000 = &H50000000
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment Caption = "Contexto"
¬comment level 1
¬comment down level 0
¬comment Left = 120
00000658: ¬define $Left28 8    ¬comment &H00000008 = 120/15
¬comment down level 0
¬comment Top = 320
00000658: ¬define $Top29 21    ¬comment &H00000015 = 320/15
¬comment down level 0
¬comment Width = 480
00000658: ¬define $Width30 32    ¬comment &H00000020 = 480/15
¬comment down level 0
¬comment Height = 195
00000658: ¬define $Height31 13    ¬comment &H0000000D = 195/15
¬comment down level 0
¬comment End
¬comment level 1
00000658: ¬define $DialogItems 2    ¬comment &H00000002 = $DialogItems + 1
¬comment down level 0
¬comment EndDialog
00000658: ¬dd &H80C800C0
¬comment ExStyle
0000065C: ¬dd 0
¬comment items,
00000660: ¬dw 2
¬comment x,y,cx,cy~
00000662: ¬dw 8
00000664: ¬dw 8
00000666: ¬dw 167
00000668: ¬dw 167
0000066A: ¬dd 0
¬comment $FormCaption22
0000066E: ¬dw 'Mi primer diálogo parametrizado'
000006AC: ¬dw 0
¬comment down level 0
¬comment ;Fontsize, FontName
000006AE: ¬dw 8
000006B0: ¬dw 'MS Sans Serif'
000006CA: ¬dw 0
¬comment align 4
000006CC: ¬align 4
¬comment down level 0
¬comment $EndControls
¬comment down level 0
000006CC: ¬dd 1342177280
¬comment ExStyle
000006D0: ¬dd 0
¬comment x,y,cx,cy
000006D4: ¬dw 8
000006D6: ¬dw 8
000006D8: ¬dw 32
000006DA: ¬dw 13
000006DC: ¬dw -1 ;ID
¬comment STATIC
000006DE: ¬dw -1
000006E0: ¬dw &H82
¬comment $Caption27
000006E2: ¬dw 'Etiqueta'
000006F2: ¬dw 0
¬comment down level 0
000006F4: ¬dw 0
¬comment align 4
000006F6: ¬align 4
¬comment down level 0
¬comment down level 0
000006F8: ¬dd 1342177280
¬comment ExStyle
000006FC: ¬dd 0
¬comment x,y,cx,cy
00000700: ¬dw 8
00000702: ¬dw 21
00000704: ¬dw 32
00000706: ¬dw 13
00000708: ¬dw -1 ;ID
¬comment STATIC
0000070A: ¬dw -1
0000070C: ¬dw &H82
¬comment $Caption32
0000070E: ¬dw 'Contexto'
0000071E: ¬dw 0
¬comment down level 0
00000720: ¬dw 0
¬comment align 4
00000722: ¬align 4
¬comment down level 0
¬comment down level 0
00000724: ¬define FormMiPrimerDialogo_Size 204    ¬comment &H000000CC = ¬curpos + $RVABase - FormMiPrimerDialogo
¬comment down level 0
¬comment ;WS_CHILD 0x40000000L
¬comment down level 0
¬comment ;WS_VISIBLE 0x10000000L
¬comment down level 0
¬comment ;Window Styles
¬comment down level 0
¬comment ; WS_OVERLAPPED 0x00000000L
¬comment down level 0
¬comment ; WS_CHILD 0x40000000L
¬comment down level 0
¬comment ; WS_MINIMIZE 0x20000000L
¬comment down level 0
¬comment ; WS_VISIBLE 0x10000000L
¬comment down level 0
¬comment ; WS_DISABLED 0x08000000L
¬comment down level 0
¬comment ; WS_CLIPSIBLINGS 0x04000000L
¬comment down level 0
¬comment ; WS_CLIPCHILDREN 0x02000000L
¬comment down level 0
¬comment ; WS_MAXIMIZE 0x01000000L
¬comment down level 0
¬comment ; WS_BORDER 0x00800000L
¬comment down level 0
¬comment ; WS_DLGFRAME 0x00400000L
¬comment down level 0
¬comment ; WS_VSCROLL 0x00200000L
¬comment down level 0
¬comment ; WS_HSCROLL 0x00100000L
¬comment down level 0
¬comment ; WS_THICKFRAME 0x00040000L
¬comment down level 0
¬comment ; WS_GROUP 0x00020000L
¬comment down level 0
¬comment ; WS_TABSTOP 0x00010000L
¬comment down level 0
¬comment ; WS_MINIMIZEBOX 0x00020000L
¬comment down level 0
¬comment ; WS_MAXIMIZEBOX 0x00010000L
¬comment down level 0
¬comment ;Dialog Styles
¬comment down level 0
¬comment ; DS_ABSALIGN 0x01L
¬comment down level 0
¬comment ; DS_SYSMODAL 0x02L
¬comment down level 0
¬comment ; DS_LOCALEDIT 0x20L /* Edit items get Local storage. */
¬comment down level 0
¬comment ; DS_SETFONT 0x40L /* User specified font for Dlg controls */
¬comment down level 0
¬comment ; DS_MODALFRAME 0x80L /* Can be combined with WS_CAPTION */
¬comment down level 0
¬comment ; DS_NOIDLEMSG 0x100L /* WM_ENTERIDLE message will not be sent */
¬comment down level 0
¬comment ; DS_SETFOREGROUND 0x200L /* not in win3.1 */
¬comment down level 0
¬comment end section .rsrc
¬comment $rsrc_end:
00000724: ¬define $rsrc_end 6291748    ¬comment &H00600124 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment align &H200
00000724: ¬align &H200
¬comment down level 0
¬comment $rsrc_end_aligned:
00000800: ¬define $rsrc_end_aligned 6291968    ¬comment &H00600200 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment down level 0
¬comment begin section .code
00000800: ¬define $RVABase 3143680    ¬comment &H002FF800 = $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
00000800: ¬define $code_file_start 2048    ¬comment &H00000800 = ¬curpos
00000800: ¬define $code_start 3145728    ¬comment &H00300000 = $RVABase + ¬curpos
¬comment down level 0
¬comment $EntryPoint:
00000800: ¬define $EntryPoint 7340032    ¬comment &H00700000 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment function Main()
00000800: ¬align 4
¬comment Main_ADDR:
00000800: ¬define Main_ADDR 7340032    ¬comment &H00700000 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
00000800: ¬define $loctotal 
¬comment push ebp
00000800: ¬db &H55
¬comment mov ebp,esp
00000801: ¬db &H89
00000802: ¬db &HE5
¬comment sub esp,locals &H81EC (DWORD) (byte)
00000803: ¬db &H83
00000804: ¬db &HEC
00000805: ¬comment recall 2053 $loctotal
00000805: ¬db $loctotal
00000806: ¬define $parnumber 4    ¬comment &H00000004 = 4
00000806: ¬define $locnumber 0    ¬comment &H00000000 = 0
¬comment params
¬comment down level 0
¬comment level 1
¬comment down level 0
¬comment local hMod as dword
00000806: ¬define $locnumber 4    ¬comment &H00000004 = $locnumber + 4
00000806: ¬define $temp33 -4    ¬comment &HFFFFFFFC = -$locnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment hMod = GetModuleHandleA(0)
¬comment = GetModuleHandleA(0)
¬comment GetModuleHandleA(0)
¬comment pushpar 0
00000806: ¬db &H6A
00000807: ¬db 0
¬comment down level 0
¬comment call [GetModuleHandleA_ADDR]
00000808: ¬db &HFF
00000809: ¬db &H15
0000080A: ¬dd 5242966
¬comment down level 0
¬comment down level 0
¬comment down level 0
¬comment mov dword [ebp-x],eax
0000080E: ¬db &H89
0000080F: ¬db &H45
00000810: ¬db -4
00000811: ¬define $temp33_last 2065    ¬comment &H00000811 = ¬curpos
¬comment down level 0
¬comment if DialogBoxParamA(hMod,dword ID_FormMiPrimerDialogo,0,dword DialogProc_ADDR,0) = 0 then
¬comment jmpexpr DialogBoxParamA(hMod,dword ID_FormMiPrimerDialogo,0,dword DialogProc_ADDR,0) = 0
¬comment DialogBoxParamA(hMod,dword ID_FormMiPrimerDialogo,0,dword DialogProc_ADDR,0)
¬comment pushpar hMod,dword ID_FormMiPrimerDialogo,0,dword DialogProc_ADDR,0
¬comment pushpar dword ID_FormMiPrimerDialogo,0,dword DialogProc_ADDR,0
¬comment pushpar 0,dword DialogProc_ADDR,0
¬comment pushpar dword DialogProc_ADDR,0
¬comment pushpar 0
00000811: ¬db &H6A
00000812: ¬db 0
¬comment down level 0
¬comment pushpar dword DialogProc_ADDR
¬comment dword DialogProc_ADDR
¬comment mov eax,x
00000813: ¬db &HB8
00000814: ¬comment recall 2068 DialogProc_ADDR
00000814: ¬dd DialogProc_ADDR
¬comment down level 0
00000818: ¬db &H50
¬comment down level 0
¬comment down level 0
¬comment pushpar 0
00000819: ¬db &H6A
0000081A: ¬db 0
¬comment down level 0
¬comment down level 0
¬comment pushpar dword ID_FormMiPrimerDialogo
¬comment dword ID_FormMiPrimerDialogo
¬comment mov eax,x
0000081B: ¬db &HB8
0000081C: ¬dd 1
¬comment down level 0
00000820: ¬db &H50
¬comment down level 0
¬comment down level 0
¬comment pushpar hMod
¬comment hMod
¬comment level 1
¬comment mov eax,dword [ebp-x]
00000821: ¬db &H8B
00000822: ¬db &H45
00000823: ¬db -4
¬comment down level 1
¬comment down level 0
00000824: ¬db &H50
¬comment down level 0
¬comment down level 0
¬comment call [DialogBoxParamA_ADDR]
00000825: ¬db &HFF
00000826: ¬db &H15
00000827: ¬dd 5243039
¬comment down level 0
¬comment down level 0
¬comment cmp eax,0
0000082B: ¬db &H83
0000082C: ¬db &HF8
0000082D: ¬db 0
¬comment jne
0000082E: ¬db &HF
0000082F: ¬db &H85
¬comment down level 0
00000830: ¬comment recall 2096 $elselbl34 - 2096 - 4
00000830: ¬dd $elselbl34 - 2096 - 4
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment MessageBoxA(0,"Prueba","Cabecera",0)
¬comment pushpar 0,"Prueba","Cabecera",0
¬comment pushpar "Prueba","Cabecera",0
¬comment pushpar "Cabecera",0
¬comment pushpar 0
00000834: ¬db &H6A
00000835: ¬db 0
¬comment down level 0
¬comment pushpar "Cabecera"
¬comment level 1
00000836: ¬db &H68
00000837: ¬comment recall 2103 $temp36
00000837: ¬dd $temp36
¬comment down level 0
¬comment down level 0
¬comment pushpar "Prueba"
¬comment level 1
0000083B: ¬db &H68
0000083C: ¬comment recall 2108 $temp37
0000083C: ¬dd $temp37
¬comment down level 0
¬comment down level 0
¬comment pushpar 0
00000840: ¬db &H6A
00000841: ¬db 0
¬comment down level 0
¬comment down level 0
¬comment call [MessageBoxA_ADDR]
00000842: ¬db &HFF
00000843: ¬db &H15
00000844: ¬dd 5243043
¬comment down level 0
¬comment down level 0
¬comment end if
00000848: ¬define $elselbl34 2120    ¬comment &H00000848 = ¬curpos
¬comment down level 0
¬comment ;mov eax,[$Info]
¬comment down level 0
¬comment ;push eax ; MB_OK
¬comment down level 0
¬comment ;push dword $Header
¬comment down level 0
¬comment ;pushstr ""
¬comment down level 0
¬comment ;push eax ; HWND_DESKTOP
¬comment down level 0
¬comment ;call [MessageBoxA]
¬comment down level 0
¬comment ;push dword 0 ; HWND_DESKTOP
¬comment down level 0
¬comment ;call [ExitProcess]
¬comment down level 0
¬comment ExitProcess(0)
¬comment pushpar 0
00000848: ¬db &H6A
00000849: ¬db 0
¬comment down level 0
¬comment call [ExitProcess_ADDR]
0000084A: ¬db &HFF
0000084B: ¬db &H15
0000084C: ¬dd 5242970
¬comment down level 0
¬comment down level 0
¬comment end function
00000850: ¬define $loctotal 4    ¬comment &H00000004 = $locnumber
¬comment level 1
¬comment leave
00000850: ¬db &HC9
¬comment retn <val>
00000851: ¬db &HC2
00000852: ¬dw 0
¬comment down level 1
¬comment down level 0
¬comment const WM_INITDIALOG = &H0110
00000854: ¬define WM_INITDIALOG 272    ¬comment &H00000110 = &H0110
¬comment down level 0
¬comment const WM_COMMAND = &H0111
00000854: ¬define WM_COMMAND 273    ¬comment &H00000111 = &H0111
¬comment down level 0
¬comment const WM_CLOSE = &H0010
00000854: ¬define WM_CLOSE 16    ¬comment &H00000010 = &H0010
¬comment down level 0
¬comment function DialogProc(hwnddlg as dword, msg as dword, wparam as dword, lparam as dword)
00000854: ¬align 4
¬comment DialogProc_ADDR:
00000854: ¬define DialogProc_ADDR 7340116    ¬comment &H00700054 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
00000854: ¬define $loctotal 
¬comment push ebp
00000854: ¬db &H55
¬comment mov ebp,esp
00000855: ¬db &H89
00000856: ¬db &HE5
¬comment sub esp,locals &H81EC (DWORD) (byte)
00000857: ¬db &H83
00000858: ¬db &HEC
00000859: ¬comment recall 2137 $loctotal
00000859: ¬db $loctotal
0000085A: ¬define $parnumber 4    ¬comment &H00000004 = 4
0000085A: ¬define $locnumber 0    ¬comment &H00000000 = 0
¬comment params hwnddlg as dword, msg as dword, wparam as dword, lparam as dword
¬comment params hwnddlg as dword
0000085A: ¬define $parnumber 8    ¬comment &H00000008 = $parnumber + 4
0000085A: ¬define $temp38 8    ¬comment &H00000008 = $parnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment params  msg as dword, wparam as dword, lparam as dword
¬comment params msg as dword
0000085A: ¬define $parnumber 12    ¬comment &H0000000C = $parnumber + 4
0000085A: ¬define $temp39 12    ¬comment &H0000000C = $parnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment params  wparam as dword, lparam as dword
¬comment params wparam as dword
0000085A: ¬define $parnumber 16    ¬comment &H00000010 = $parnumber + 4
0000085A: ¬define $temp40 16    ¬comment &H00000010 = $parnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment params  lparam as dword
0000085A: ¬define $parnumber 20    ¬comment &H00000014 = $parnumber + 4
0000085A: ¬define $temp41 20    ¬comment &H00000014 = $parnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment down level 0
¬comment down level 0
¬comment down level 0
¬comment level 1
¬comment down level 0
¬comment local var1 as dword
0000085A: ¬define $locnumber 4    ¬comment &H00000004 = $locnumber + 4
0000085A: ¬define $temp42 -4    ¬comment &HFFFFFFFC = -$locnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment local var2 as dword
0000085A: ¬define $locnumber 8    ¬comment &H00000008 = $locnumber + 4
0000085A: ¬define $temp43 -8    ¬comment &HFFFFFFF8 = -$locnumber
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment if msg = dword WM_CLOSE then
¬comment jmpexpr msg = dword WM_CLOSE
¬comment dword WM_CLOSE
¬comment mov eax,x
0000085A: ¬db &HB8
0000085B: ¬dd 16
¬comment down level 0
¬comment mov ebx,eax
0000085F: ¬db &H89
00000860: ¬db &HC3
¬comment msg
¬comment level 1
¬comment mov eax,dword [ebp-x]
00000861: ¬db &H8B
00000862: ¬db &H45
00000863: ¬db 12
¬comment down level 1
¬comment down level 0
¬comment cmp eax,ebx
00000864: ¬db &H39
00000865: ¬db &HD8
¬comment jne
00000866: ¬db &HF
00000867: ¬db &H85
¬comment down level 0
00000868: ¬comment recall 2152 $elselbl44 - 2152 - 4
00000868: ¬dd $elselbl44 - 2152 - 4
¬comment level 1
¬comment level 1
¬comment down level 0
¬comment var2 = 0
¬comment = 0
¬comment 0
¬comment xor eax,eax
0000086C: ¬db &H31
0000086D: ¬db &HC0
¬comment down level 0
¬comment down level 0
¬comment down level 0
¬comment mov dword [ebp-x],eax
0000086E: ¬db &H89
0000086F: ¬db &H45
00000870: ¬db -8
00000871: ¬define $temp43_last 2161    ¬comment &H00000871 = ¬curpos
¬comment down level 0
¬comment EndDialog(hwnddlg,var2)
¬comment pushpar hwnddlg,var2
¬comment pushpar var2
¬comment var2
¬comment level 1
¬comment down level 0
00000871: ¬db &H50
¬comment down level 0
¬comment pushpar hwnddlg
¬comment hwnddlg
¬comment level 1
¬comment mov eax,dword [ebp-x]
00000872: ¬db &H8B
00000873: ¬db &H45
00000874: ¬db 8
¬comment down level 1
¬comment down level 0
00000875: ¬db &H50
¬comment down level 0
¬comment down level 0
¬comment call [EndDialog_ADDR]
00000876: ¬db &HFF
00000877: ¬db &H15
00000878: ¬dd 5243047
¬comment down level 0
¬comment down level 0
¬comment return 1
¬comment 1
¬comment mov eax,x
0000087C: ¬db &HB8
0000087D: ¬dd 1
¬comment down level 0
¬comment leave
00000881: ¬db &HC9
¬comment retn <val>
00000882: ¬db &HC2
00000883: ¬dw 16
00000885: ¬define $lastreturn 2181    ¬comment &H00000885 = ¬curpos
¬comment down level 0
¬comment else
¬comment level 1
00000885: ¬define $elselbl44 2181    ¬comment &H00000885 = ¬curpos
¬comment level 1
¬comment down level 0
¬comment return 0
¬comment 0
¬comment xor eax,eax
00000885: ¬db &H31
00000886: ¬db &HC0
¬comment down level 0
¬comment down level 0
¬comment leave
00000887: ¬db &HC9
¬comment retn <val>
00000888: ¬db &HC2
00000889: ¬dw 16
0000088B: ¬define $lastreturn 2187    ¬comment &H0000088B = ¬curpos
¬comment down level 0
¬comment end if
0000088B: ¬define $endiflbl45 2187    ¬comment &H0000088B = ¬curpos
¬comment down level 0
¬comment end function
0000088B: ¬define $loctotal 8    ¬comment &H00000008 = $locnumber
¬comment level 1
¬comment down level 0
¬comment end section .code
0000088B: ¬define $code_end 3145867    ¬comment &H0030008B = $RVABase + ¬curpos
¬comment align &H200
0000088B: ¬align &H200
¬comment down level 0
00000A00: ¬define $code_end_aligned 3146240    ¬comment &H00300200 = $RVABase + ¬curpos
¬comment down level 0
¬comment begin section .data
00000A00: ¬define $RVABase 4191744    ¬comment &H003FF600 = $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
00000A00: ¬define $data_file_start 2560    ¬comment &H00000A00 = ¬curpos
00000A00: ¬define $data_start 4194304    ¬comment &H00400000 = $RVABase + ¬curpos
¬comment down level 0
¬comment $bytes_count: dd &H12345678
00000A00: ¬define $bytes_count 8388608    ¬comment &H00800000 = ¬curpos + $ImageBase + $RVABase
¬comment dd &H12345678
00000A00: ¬dd &H12345678
¬comment down level 0
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000A04: ¬dd &H12345678
00000A08: ¬dd &H12345678
00000A0C: ¬dd &H12345678
00000A10: ¬dd &H12345678
00000A14: ¬dd &H12345678
00000A18: ¬dd &H12345678
00000A1C: ¬dd &H12345678
00000A20: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000A24: ¬dd &H12345678
00000A28: ¬dd &H12345678
00000A2C: ¬dd &H12345678
00000A30: ¬dd &H12345678
00000A34: ¬dd &H12345678
00000A38: ¬dd &H12345678
00000A3C: ¬dd &H12345678
00000A40: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000A44: ¬dd &H12345678
00000A48: ¬dd &H12345678
00000A4C: ¬dd &H12345678
00000A50: ¬dd &H12345678
00000A54: ¬dd &H12345678
00000A58: ¬dd &H12345678
00000A5C: ¬dd &H12345678
00000A60: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000A64: ¬dd &H12345678
00000A68: ¬dd &H12345678
00000A6C: ¬dd &H12345678
00000A70: ¬dd &H12345678
00000A74: ¬dd &H12345678
00000A78: ¬dd &H12345678
00000A7C: ¬dd &H12345678
00000A80: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000A84: ¬dd &H12345678
00000A88: ¬dd &H12345678
00000A8C: ¬dd &H12345678
00000A90: ¬dd &H12345678
00000A94: ¬dd &H12345678
00000A98: ¬dd &H12345678
00000A9C: ¬dd &H12345678
00000AA0: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000AA4: ¬dd &H12345678
00000AA8: ¬dd &H12345678
00000AAC: ¬dd &H12345678
00000AB0: ¬dd &H12345678
00000AB4: ¬dd &H12345678
00000AB8: ¬dd &H12345678
00000ABC: ¬dd &H12345678
00000AC0: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000AC4: ¬dd &H12345678
00000AC8: ¬dd &H12345678
00000ACC: ¬dd &H12345678
00000AD0: ¬dd &H12345678
00000AD4: ¬dd &H12345678
00000AD8: ¬dd &H12345678
00000ADC: ¬dd &H12345678
00000AE0: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000AE4: ¬dd &H12345678
00000AE8: ¬dd &H12345678
00000AEC: ¬dd &H12345678
00000AF0: ¬dd &H12345678
00000AF4: ¬dd &H12345678
00000AF8: ¬dd &H12345678
00000AFC: ¬dd &H12345678
00000B00: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000B04: ¬dd &H12345678
00000B08: ¬dd &H12345678
00000B0C: ¬dd &H12345678
00000B10: ¬dd &H12345678
00000B14: ¬dd &H12345678
00000B18: ¬dd &H12345678
00000B1C: ¬dd &H12345678
00000B20: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000B24: ¬dd &H12345678
00000B28: ¬dd &H12345678
00000B2C: ¬dd &H12345678
00000B30: ¬dd &H12345678
00000B34: ¬dd &H12345678
00000B38: ¬dd &H12345678
00000B3C: ¬dd &H12345678
00000B40: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000B44: ¬dd &H12345678
00000B48: ¬dd &H12345678
00000B4C: ¬dd &H12345678
00000B50: ¬dd &H12345678
00000B54: ¬dd &H12345678
00000B58: ¬dd &H12345678
00000B5C: ¬dd &H12345678
00000B60: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000B64: ¬dd &H12345678
00000B68: ¬dd &H12345678
00000B6C: ¬dd &H12345678
00000B70: ¬dd &H12345678
00000B74: ¬dd &H12345678
00000B78: ¬dd &H12345678
00000B7C: ¬dd &H12345678
00000B80: ¬dd &H12345678
¬comment down level 0
¬comment dd &H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678,&H12345678
00000B84: ¬dd &H12345678
00000B88: ¬dd &H12345678
00000B8C: ¬dd &H12345678
00000B90: ¬dd &H12345678
00000B94: ¬dd &H12345678
00000B98: ¬dd &H12345678
00000B9C: ¬dd &H12345678
00000BA0: ¬dd &H12345678
¬comment down level 0
¬comment $Info: dd 0
00000BA4: ¬define $Info 8389028    ¬comment &H008001A4 = ¬curpos + $ImageBase + $RVABase
¬comment dd 0
00000BA4: ¬dd 0
¬comment down level 0
¬comment down level 0
¬comment $Header: db "Cabecera",0
00000BA8: ¬define $Header 8389032    ¬comment &H008001A8 = ¬curpos + $ImageBase + $RVABase
¬comment db "Cabecera",0
00000BA8: ¬db 'Cabecera'
00000BB0: ¬db 0
¬comment down level 0
¬comment down level 0
¬comment end section .data
¬comment $data_definitions
¬comment $temp36: db "Cabecera",0
00000BB1: ¬define $temp36 8389041    ¬comment &H008001B1 = ¬curpos + $ImageBase + $RVABase
¬comment db "Cabecera",0
00000BB1: ¬db 'Cabecera'
00000BB9: ¬db 0
¬comment down level 0
¬comment down level 0
¬comment down level 0
¬comment $temp37: db "Prueba",0
00000BBA: ¬define $temp37 8389050    ¬comment &H008001BA = ¬curpos + $ImageBase + $RVABase
¬comment db "Prueba",0
00000BBA: ¬db 'Prueba'
00000BC0: ¬db 0
¬comment down level 0
¬comment down level 0
¬comment down level 0
00000BC1: ¬define $data_end 4194753    ¬comment &H004001C1 = $RVABase + ¬curpos
¬comment align &H200
00000BC1: ¬align &H200
¬comment down level 0
00000C00: ¬define $data_end_aligned 4194816    ¬comment &H00400200 = $RVABase + ¬curpos
¬comment down level 0
¬comment end file
00000C00: ¬define $RVABase 5239808    ¬comment &H004FF400 = $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
¬comment $image_end:
00000C00: ¬define $image_end 9437184    ¬comment &H00900000 = ¬curpos + $ImageBase + $RVABase
¬comment down level 0
¬comment down level 0

¬define $FormNumber 1
¬define $ImageBase 4194304
¬define $RVABase 5239808
¬define $image_start 4194304
¬define PE_Stub 4194432
¬define $header_end 4195328
¬define $idata_file_start 1024
¬define $idata_start 5242880
¬define $DLLName2 5242940
¬define $OriginalFirstThunk1 5242954
¬define $FirstThunk3 5242966
¬define GetModuleHandleA_ADDR 5242966
¬define ExitProcess_ADDR 5242970
¬define $FNLib7 5242978
¬define $FNLib8 5242997
¬define $DLLName10 5243011
¬define $OriginalFirstThunk9 5243023
¬define $FirstThunk11 5243039
¬define DialogBoxParamA_ADDR 5243039
¬define MessageBoxA_ADDR 5243043
¬define EndDialog_ADDR 5243047
¬define $FNLib15 5243055
¬define $FNLib16 5243073
¬define $FNLib17 5243087
¬define $idata_end 5243099
¬define $idata_end_aligned 5243392
¬define $rsrc_file_start 1536
¬define $rsrc_start 6291456
¬define $direntry1 6291480
¬define $direntry2 6291504
¬define $dialogs 6291528
¬define FormMiPrimerDialogo 2097240
¬define ID_FormMiPrimerDialogo 1
¬define $DialogItems 2
¬define $ClientLeft18 8
¬define $ClientTop19 8
¬define $ClientWidth20 167
¬define $ClientHeight21 167
¬define $Style 1342177280
¬define $Left23 8
¬define $Top24 8
¬define $Width25 32
¬define $Height26 13
¬define $Left28 8
¬define $Top29 21
¬define $Width30 32
¬define $Height31 13
¬define FormMiPrimerDialogo_Size 204
¬define $rsrc_end 6291748
¬define $rsrc_end_aligned 6291968
¬define $code_file_start 2048
¬define $code_start 3145728
¬define $EntryPoint 7340032
¬define Main_ADDR 7340032
¬define $loctotal 8
¬define $parnumber 20
¬define $locnumber 8
¬define $temp33 -4
¬define $temp33_last 2065
¬define $elselbl34 2120
¬define WM_INITDIALOG 272
¬define WM_COMMAND 273
¬define WM_CLOSE 16
¬define DialogProc_ADDR 7340116
¬define $temp38 8
¬define $temp39 12
¬define $temp40 16
¬define $temp41 20
¬define $temp42 -4
¬define $temp43 -8
¬define $temp43_last 2161
¬define $lastreturn 2187
¬define $elselbl44 2181
¬define $endiflbl45 2187
¬define $code_end 3145867
¬define $code_end_aligned 3146240
¬define $data_file_start 2560
¬define $data_start 4194304
¬define $bytes_count 8388608
¬define $Info 8389028
¬define $Header 8389032
¬define $temp36 8389041
¬define $temp37 8389050
¬define $data_end 4194753
¬define $data_end_aligned 4194816
¬define $image_end 9437184

¬linedef *;*
\01
¬comment down level 0


¬linedef *:*
¬define \01 ¬curpos + $ImageBase + $RVABase
\02
¬comment down level 0


¬linedef align *
¬align \01
¬comment down level 0


¬linedef begin section .code
¬define $RVABase $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
¬define $code_file_start ¬curpos
¬define $code_start $RVABase + ¬curpos
¬comment down level 0


¬linedef end section .code
¬define $code_end $RVABase + ¬curpos
align &H200
¬define $code_end_aligned $RVABase + ¬curpos
¬comment down level 0


¬linedef begin section .data
¬define $RVABase $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
¬define $data_file_start ¬curpos
¬define $data_start $RVABase + ¬curpos
¬comment down level 0


¬linedef end section .data
$data_definitions
¬define $data_end $RVABase + ¬curpos
align &H200
¬define $data_end_aligned $RVABase + ¬curpos
¬comment down level 0


¬linedef begin section .idata
¬define $RVABase $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
¬define $idata_file_start ¬curpos
$idata_start:
¬comment down level 0


¬linedef end section .idata
$idata_libraries
¬dd 0,0,0,0,0 ¬comment bloque vacio
$idata_definitions
$idata_end:
align &H200
$idata_end_aligned:
¬comment down level 0


¬linedef begin section .rsrc
¬define $RVABase $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
¬define $rsrc_file_start ¬curpos
$rsrc_start:
¬comment down level 0


¬linedef end section .rsrc
$rsrc_end:
align &H200
$rsrc_end_aligned:
¬comment down level 0


¬linedef begin file
define $ImageBase &H400000
define $RVABase 0

$image_start:
db "MZ"
dw &H80 ;Stub size
dw 1 ;no relocations
dw 0
dw 4 ; 4-para header
dw &H10 ; 16 extra para for stack
dw -1 ; maximum extra paras: LOTS
dw 0,&H140 ; SS:SP = 0000:0140
dw 0 ; no checksum
dw 0,0 ; CS:IP = 0:0, start at beginning
dw &H40 ; reloc table beyond hdr
dw 0 ; overlay number
dw 0,0,0,0 ; reserved
dw 0,0 ; OEM id and OEM info
dw 0,0,0,0,0,0,0,0,0,0 ; reserved
dd &H80 ; offset PE header
db &H0E,&H1F,&HBA,&HE,0,&HB4,&H09,&HCD,&H21,&HB8,1,&H4C,&HCD,&H21
;db 'This program cannot be run in DOS mode.',0Dh,0Ah,24h
db 'Este programa no funciona desde modo DOS.',&H0D,&H0A,&H24

align &H80

PE_Stub:
db "PE",0,0
dw &H014C ; 386-compatible
dw 4 ; number of sections
dd ¬timestamp ; Time and date when the file was created
dd 0 ; PointerToSymbolTable
dd 0 ; NumberOfSymbols
dw &HE0 ; SizeOfOptionalHeader
dw &H10E ;Characteristics
; IMAGE_FILE_RELOCS_STRIPPED 0x0001 // Relocation info stripped from file.
; IMAGE_FILE_EXECUTABLE_IMAGE 0x0002 // File is executable (i.e. no unresolved externel references).
; IMAGE_FILE_LINE_NUMS_STRIPPED 0x0004 // Line nunbers stripped from file.
; IMAGE_FILE_LOCAL_SYMS_STRIPPED 0x0008 // Local symbols stripped from file.
; IMAGE_FILE_32BIT_MACHINE 0x0100 // 32 bit word machine.

dw &H10B ;Magic for a normal executable/DLL.
db 1 ;MajorLinkerVersion;
db &H43 ;MinorLinkerVersion;
dd 0 ;SizeOfCode;
dd 0 ;SizeOfInitializedData;
dd 0 ;SizeOfUninitializedData;
dd $EntryPoint - $ImageBase ;RVA AddressOfEntryPoint;
dd $code_start ;BaseOfCode;
dd $data_start ;BaseOfData;
dd $ImageBase ;ImageBase;
dd &H100000 ;SectionAlignment;
dd &H200 ;FileAlignment;
dw 1 ;MajorOperatingSystemVersion;
dw 0 ;MinorOperatingSystemVersion;
dw 0 ;MajorImageVersion;
dw 0 ;MinorImageVersion;
dw 4 ;MajorSubsystemVersion;
dw 0 ;MinorSubsystemVersion;
dd 0 ;Win32VersionValue;
dd $image_end - $ImageBase ;SizeOfImage;
dd $header_end - $image_start ;SizeOfHeaders;
dd 0 ;CheckSum;
dw 2 ;Subsystem; IMAGE_SUBSYSTEM_WINDOWS_GUI
dw 0 ;DllCharacteristics;
dd &H100000 ;SizeOfStackReserve;
dd &H100000 ;SizeOfStackCommit;
dd &H100000 ;SizeOfHeapReserve;
dd 0 ;SizeOfHeapCommit;
dd 0 ;LoaderFlags;
dd 16 ;NumberOfRvaAndSizes;
dd 0,0 ;Directory1 edata RVa, Size
dd $idata_start - $ImageBase,$idata_end - $idata_start ;Directory2 idata RVa, Size
dd $rsrc_start - $ImageBase,$rsrc_end - $rsrc_start ; Directory 3 .rsrc
dd 0,0 ; Directory 4
dd 0,0 ; Directory 5
dd 0,0 ; Directory 6
dd 0,0 ; Directory 7
dd 0,0 ; Directory 8
dd 0,0 ; Directory 9
dd 0,0 ; Directory 10
dd 0,0 ; Directory 11
dd 0,0 ; Directory 12
dd 0,0 ; Directory 13
dd 0,0 ; Directory 14
dd 0,0 ; Directory 15
dd 0,0 ; Directory 16

db '.idata',0,0
dd $idata_end - $idata_start
dd $idata_start - $ImageBase ; VirtualAddress;
dd $idata_end_aligned - $idata_start ; SizeOfRawData; Size aligned to FileAlign
dd $idata_file_start ; PointerToRawData;
dd 0 ; PointerToRelocations;
dd 0 ; PointerToLinenumbers;
dw 0 ; NumberOfRelocations;
dw 0 ; NumberOfLinenumbers;
dd &HC0000040 ; Characteristics;
;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
;IMAGE_SCN_MEM_WRITE 0x80000000 // Section is writeable.
;IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040 // Section contains initialized data.

db '.rsrc',0,0,0
dd $rsrc_end - $rsrc_start
dd $rsrc_start - $ImageBase ; VirtualAddress;
dd $rsrc_end_aligned - $rsrc_start ; SizeOfRawData; Size aligned to FileAlign
dd $rsrc_file_start ; PointerToRawData;
dd 0 ; PointerToRelocations;
dd 0 ; PointerToLinenumbers;
dw 0 ; NumberOfRelocations;
dw 0 ; NumberOfLinenumbers;
dd &H40000040 ; Characteristics;
;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
;IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040 // Section contains initialized data.

db '.code',0,0,0
dd $code_end - $code_start
dd $code_start ; VirtualAddress;
dd $code_end_aligned - $code_start ; SizeOfRawData; Size aligned to FileAlign
dd $code_file_start ; PointerToRawData;
dd 0 ; PointerToRelocations;
dd 0 ; PointerToLinenumbers;
dw 0 ; NumberOfRelocations;
dw 0 ; NumberOfLinenumbers;
dd &H60000020 ; Characteristics;
;IMAGE_SCN_CNT_CODE 0x00000020 // Section contains code.
;IMAGE_SCN_MEM_EXECUTE 0x20000000 // Section is executable.
;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.

;.data section
db '.data',0,0,0
dd $data_end - $data_start ; VirtualSize;
dd $data_start ; VirtualAddress;
dd $data_end_aligned - $data_start ; SizeOfRawData; Size aligned to FileAlign
dd $data_file_start ; PointerToRawData;
dd 0 ; PointerToRelocations;
dd 0 ; PointerToLinenumbers;
dw 0 ; NumberOfRelocations;
dw 0 ; NumberOfLinenumbers;
dd &HC0000040 ; Characteristics;
;IMAGE_SCN_MEM_READ 0x40000000 // Section is readable.
;IMAGE_SCN_MEM_WRITE 0x80000000 // Section is writeable.
;IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040 // Section contains initialized data.

align &H200
$header_end:
¬comment down level 0


¬linedef end file
¬define $RVABase $RVABase + ¬curpos - 1 / &H100000 + 1 * &H100000 - ¬curpos
$image_end:
¬comment down level 0


¬linedef db *
¬db \01
¬comment down level 0


¬linedef dw *
¬dw \01
¬comment down level 0


¬linedef dd *
¬dd \01
¬comment down level 0


¬linedef push eax
¬db &H50
¬comment down level 0


¬linedef push 0
¬db &H6A,0
¬comment down level 0


¬linedef push dword 0
¬db &H6A,0
¬comment down level 0


¬linedef push word 0
¬db &H66,&H6A,0
¬comment down level 0


¬linedef push dword [*]
¬db &HFF,&H35
¬dd \01
¬comment down level 0


¬linedef push word [*]
¬db &H66,&HFF,&H35
¬dd \01
¬comment down level 0


¬linedef push dword *
¬db &H68
¬dd \01
¬comment down level 0


¬linedef push word *
¬db &H66,&H68
¬dd \01
¬comment down level 0


¬linedef push *
¬db &H68
¬dd \01
¬comment down level 0


¬linedef pushstr *
¬local $temp
call $temp
¬db \01,0
$temp:
¬comment down level 0


¬linedef pop eax
¬db &H58
¬comment down level 0


¬linedef pop dword [*]
¬db &H8F,&H05
¬dd \01
¬comment down level 0


¬linedef pop word [*]
¬db &H66,&H8F,&H05
¬dd \01
¬comment down level 0


¬linedef define * *
¬define \01 \02
¬comment down level 0


¬linedef call [*]
¬db &HFF,&H15
¬dd \01
¬comment down level 0


¬linedef call *
¬db &HE8
¬dd \01 - ¬curpos - 4 - $ImageBase - $RVABase
¬comment down level 0


¬linedef xor eax,eax
¬db &H31,&HC0
¬comment down level 0


¬linedef mov eax,[ebp*]
¬db &H8B,&H45
¬db \01
¬comment down level 0


¬linedef mov eax,[*]
¬db &HA1
¬dd \01
¬comment down level 0


¬linedef mov eax,*
¬db &HB8
¬dd \01
¬comment down level 0


¬linedef function *(*)
¬align 4
\01_ADDR:
¬define $loctotal
¬db &H55 ¬comment push ebp
¬db &H89,&HE5 ¬comment mov ebp,esp
¬db &H83,&HEC ¬comment sub esp,locals &H81EC (DWORD) (byte)
¬db $loctotal
¬define $parnumber 4
¬define $locnumber 0
params \02
¬comment level 1
¬linedef \01(*)
pushpar \¬01
call [\01_ADDR]
¬comment down level 1
¬
¬comment down level 0


¬linedef params
¬comment down level 0


¬linedef params *,*
params \01
params \02
¬comment down level 0


¬linedef params * as dword
¬local $temp
¬define $parnumber $parnumber + 4
¬define $temp $parnumber
¬comment level 1
¬linedef \01 = *
= \¬01
¬db &H89,&H45,$temp ¬comment mov dword [ebp-x],eax
¬define $temp_last ¬curpos
¬comment down level 1
¬
¬comment level 1
¬linedef \01
¬comment level 2
¬if $temp_last <> ¬curpos
¬db &H8B,&H45,$temp ¬comment mov eax,dword [ebp-x]
¬comment down level 2
¬
¬comment down level 1
¬
¬comment down level 0


¬linedef const * = *
¬define \01 \02
¬comment down level 0


¬linedef global * as dword
¬local $temp
¬comment level 1
¬linedef $data_definitions
¬expand $data_definitions
\01: dd 0
¬comment down level 1
¬
¬comment level 1
¬linedef \01 = *
= \¬01
¬db &HA3,$temp ¬comment mov dword [x],eax
¬comment down level 1
¬
¬comment level 1
¬linedef \01
¬db &HA1,$temp ¬comment mov eax,dword [x]
¬comment down level 1
¬
¬comment down level 0


¬linedef local * as dword
¬local $temp
¬define $locnumber $locnumber + 4
¬define $temp -$locnumber
¬comment level 1
¬linedef \01 = *
= \¬01
¬db &H89,&H45,$temp ¬comment mov dword [ebp-x],eax
¬define $temp_last ¬curpos
¬comment down level 1
¬
¬comment level 1
¬linedef \01
¬comment level 2
¬if $temp_last <> ¬curpos
¬db &H8B,&H45,$temp ¬comment mov eax,dword [ebp-x]
¬comment down level 2
¬
¬comment down level 1
¬
¬comment down level 0


¬linedef end function
¬define $loctotal $locnumber
¬comment level 1
¬if $lastreturn <> ¬curpos
¬db &HC9 ¬comment leave
¬db &HC2 ¬comment retn <val>
¬dw $parnumber - 4
¬comment down level 1
¬
¬comment down level 0


¬linedef return *
\01
¬db &HC9 ¬comment leave
¬db &HC2 ¬comment retn <val>
¬dw $parnumber - 4
¬define $lastreturn ¬curpos
¬comment down level 0


¬linedef dword *
¬db &HB8 ¬comment mov eax,x
¬dd \01
¬comment down level 0


¬linedef 0
xor eax,eax
¬comment down level 0


¬linedef 1*
¬db &HB8 ¬comment mov eax,x
¬dd 1\01
¬comment down level 0


¬linedef 2*
¬db &HB8 ¬comment mov eax,x
¬dd 2\01
¬comment down level 0


¬linedef 3*
¬db &HB8 ¬comment mov eax,x
¬dd 3\01
¬comment down level 0


¬linedef 4*
¬db &HB8 ¬comment mov eax,x
¬dd 4\01
¬comment down level 0


¬linedef 5*
¬db &HB8 ¬comment mov eax,x
¬dd 5\01
¬comment down level 0


¬linedef 6*
¬db &HB8 ¬comment mov eax,x
¬dd 6\01
¬comment down level 0


¬linedef 7*
¬db &HB8 ¬comment mov eax,x
¬dd 7\01
¬comment down level 0


¬linedef 8*
¬db &HB8 ¬comment mov eax,x
¬dd 8\01
¬comment down level 0


¬linedef 9*
¬db &HB8 ¬comment mov eax,x
¬dd 9\01
¬comment down level 0


¬linedef &H*
¬db &HB8 ¬comment mov eax,x
¬dd &H\01
¬comment down level 0


¬linedef "*
¬local $temp
¬comment level 1
¬linedef $data_definitions
¬expand $data_definitions
$temp: db "\01,0
¬comment down level 1
¬
¬db &HB8 ¬comment mov eax,x
¬dd $temp
¬comment down level 0


¬linedef = * + *
= \02
¬db &H89,&HC3 ¬comment mov ebx,eax
= \01
¬db &H01,&HD8
¬comment down level 0


¬linedef = * - *
= \02
¬db &H89,&HC3 ¬comment mov ebx,eax
= \01
¬db &H29,&HD8
¬comment down level 0


¬linedef = * % *
= \01
¬db &H89,&HC3 ¬comment mov ebx,eax
= \02
¬db &HF7,&HEB ¬comment imul ebx
¬comment down level 0


¬linedef = * / *
= \02
¬db &H89,&HC3 ¬comment mov ebx,eax
= \01
¬db &HF7,&HFB ¬comment idiv ebx
¬comment down level 0


¬linedef = *
\01
¬comment down level 0


¬linedef jmpexpr * = 0
\01
¬db &H83,&HF8,0 ¬comment cmp eax,0
¬db &HF,&H85 ¬comment jne
¬comment down level 0


¬linedef jmpexpr * = *
\02
¬db &H89,&HC3 ¬comment mov ebx,eax
\01
¬db &H39,&HD8 ¬comment cmp eax,ebx
¬db &HF,&H85 ¬comment jne
¬comment down level 0


¬linedef if * then
¬local $elselbl, $endiflbl
jmpexpr \01
¬dd $elselbl - ¬curpos - 4
¬comment level 1
¬pushdef else
¬comment level 2
¬if $lastreturn <> ¬curpos
¬db &HE9 ¬comment jmp
¬dd $endiflbl - ¬curpos - 4
¬comment down level 2
¬
¬define $elselbl ¬curpos
¬comment level 2
¬linedef end if
¬popdef else
¬popdef end if
¬define $endiflbl ¬curpos
¬comment down level 2
¬
¬comment down level 1
¬
¬comment level 1
¬pushdef end if
¬popdef else
¬popdef end if
¬define $elselbl ¬curpos
¬comment down level 1
¬
¬comment down level 0


¬linedef library *.DLL
¬local $OriginalFirstThunk, $DLLName, $FirstThunk, $LibraryOriginalImports, $LibraryThunkImports, $LibraryFunctionsImports
¬comment level 1
¬linedef $idata_libraries
¬expand $idata_libraries
¬dd $OriginalFirstThunk - $ImageBase
¬dd 0
¬dd 0
¬dd $DLLName - $ImageBase
¬dd $FirstThunk - $ImageBase
¬comment down level 1
¬
¬comment level 1
¬linedef $idata_definitions
¬expand $idata_definitions
¬define $DLLName ¬curpos + $ImageBase + $RVABase
¬db "\01.DLL",0,0
¬define $OriginalFirstThunk ¬curpos + $ImageBase + $RVABase
$LibraryOriginalImports
¬dd 0
¬define $FirstThunk ¬curpos + $ImageBase + $RVABase
$LibraryThunkImports
¬dd 0
$LibraryFunctionsImports
¬comment down level 1
¬
¬comment level 1
¬linedef import * as *
¬local $FNLib
¬comment level 2
¬linedef \¬02(*)
pushpar \¬¬01
call [\¬02_ADDR]
¬comment down level 2
¬
¬comment level 2
¬linedef $LibraryOriginalImports
¬expand $LibraryOriginalImports
¬dd $FNLib - $ImageBase
¬comment down level 2
¬
¬comment level 2
¬linedef $LibraryThunkImports
¬expand $LibraryThunkImports
¬define \¬02_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib - $ImageBase
¬comment down level 2
¬
¬comment level 2
¬linedef $LibraryFunctionsImports
¬expand $LibraryFunctionsImports
¬define $FNLib ¬curpos + $ImageBase + $RVABase
¬db 0,0,'\¬01',0
¬comment down level 2
¬
¬comment down level 1
¬
¬comment level 1
¬linedef import *
import \¬01 as \¬01
¬comment down level 1
¬
¬comment down level 0


¬linedef pushpar *,*
pushpar \02
pushpar \01
¬comment down level 0


¬linedef pushpar 0
¬db &H6A,0
¬comment down level 0


¬linedef pushpar 1*
¬db &H68
¬dd 1\01
¬comment down level 0


¬linedef pushpar 2*
¬db &H68
¬dd 2\01
¬comment down level 0


¬linedef pushpar 3*
¬db &H68
¬dd 3\01
¬comment down level 0


¬linedef pushpar 4*
¬db &H68
¬dd 4\01
¬comment down level 0


¬linedef pushpar 5*
¬db &H68
¬dd 5\01
¬comment down level 0


¬linedef pushpar 6*
¬db &H68
¬dd 6\01
¬comment down level 0


¬linedef pushpar 7*
¬db &H68
¬dd 7\01
¬comment down level 0


¬linedef pushpar 8*
¬db &H68
¬dd 8\01
¬comment down level 0


¬linedef pushpar 9*
¬db &H68
¬dd 9\01
¬comment down level 0


¬linedef pushpar "*
¬local $temp
¬comment level 1
¬linedef $data_definitions
¬expand $data_definitions
$temp: db "\01,0
¬comment down level 1
¬
¬db &H68
¬dd $temp
¬comment down level 0


¬linedef pushpar *
\01
¬db &H50
¬comment down level 0


¬linedef library '*.DLL'
library \01.DLL
¬comment down level 0


¬linedef library "*.DLL"
library \01.DLL
¬comment down level 0


¬linedef Begin VB.Form *
¬local $ClientLeft,$ClientTop,$ClientWidth,$ClientHeight,$FormCaption
¬define \01 ¬curpos + $RVABase
¬define $FormNumber $FormNumber + 1
¬define ID_\01 $FormNumber
¬comment level 1
¬linedef \01.Show
¬comment down level 1
¬
¬comment level 1
¬linedef Caption = *
¬comment level 2
¬linedef $FormCaption
¬dw \¬01,0
¬comment down level 2
¬
¬comment down level 1
¬
¬comment level 1
¬linedef ClientLeft = *
¬define $ClientLeft \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef ClientTop = *
¬define $ClientTop \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef ClientWidth = *
¬define $ClientWidth \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef ClientHeight = *
¬define $ClientHeight \¬01/15
¬comment down level 1
¬
¬define $DialogItems
¬comment level 1
¬linedef EndDialog
¬dd &H80C800C0
¬dd 0 ¬comment ExStyle
¬dw $DialogItems ¬comment items,
¬dw $ClientLeft,$ClientTop,$ClientWidth,$ClientHeight ¬comment x,y,cx,cy~
¬dd 0
$FormCaption
¬dw 8,'MS Sans Serif',0 ¬comment ;Fontsize, FontName
align 4
$EndControls
¬define \01_Size ¬curpos + $RVABase - \01
¬comment down level 1
¬
¬define $DialogItems 0
¬comment level 1
¬linedef $EndControls
¬comment down level 1
¬
¬comment down level 0


¬linedef Begin VB.Label *
¬local $Left,$Top,$Width,$Height,$Caption
¬define $Style &H50000000 ¬comment WS_CHILD+WS_VISIBLE
¬comment level 1
¬linedef Caption = *
¬comment level 2
¬linedef $Caption
¬dw \¬01,0
¬comment down level 2
¬
¬comment down level 1
¬
¬comment level 1
¬linedef Left = *
¬define $Left \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef Top = *
¬define $Top \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef Width = *
¬define $Width \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef Height = *
¬define $Height \¬01/15
¬comment down level 1
¬
¬comment level 1
¬linedef End
¬comment level 2
¬linedef $EndControls
¬expand $EndControls
¬dd $Style
¬dd 0 ¬comment ExStyle
¬dw $Left,$Top,$Width,$Height ¬comment x,y,cx,cy
¬dw -1 ;ID
¬dw -1, &H82 ¬comment STATIC
$Caption
¬dw 0
align 4
¬comment down level 2
¬
¬define $DialogItems $DialogItems + 1
¬comment down level 1
¬
¬comment down level 0


¬linedef $idata_libraries
¬dd $OriginalFirstThunk1 - $ImageBase
¬dd 0
¬dd 0
¬dd $DLLName2 - $ImageBase
¬dd $FirstThunk3 - $ImageBase
¬comment down level 0
¬dd $OriginalFirstThunk9 - $ImageBase
¬dd 0
¬dd 0
¬dd $DLLName10 - $ImageBase
¬dd $FirstThunk11 - $ImageBase
¬comment down level 0


¬linedef $idata_definitions
¬define $DLLName2 ¬curpos + $ImageBase + $RVABase
¬db "KERNEL32.DLL",0,0
¬define $OriginalFirstThunk1 ¬curpos + $ImageBase + $RVABase
$LibraryOriginalImports4
¬dd 0
¬define $FirstThunk3 ¬curpos + $ImageBase + $RVABase
$LibraryThunkImports5
¬dd 0
$LibraryFunctionsImports6
¬comment down level 0
¬define $DLLName10 ¬curpos + $ImageBase + $RVABase
¬db "USER32.DLL",0,0
¬define $OriginalFirstThunk9 ¬curpos + $ImageBase + $RVABase
$LibraryOriginalImports12
¬dd 0
¬define $FirstThunk11 ¬curpos + $ImageBase + $RVABase
$LibraryThunkImports13
¬dd 0
$LibraryFunctionsImports14
¬comment down level 0


¬linedef import * as *
¬local $FNLib
¬comment level 1
¬linedef \02(*)
pushpar \¬01
call [\02_ADDR]
¬comment down level 1
¬
¬comment level 1
¬linedef $LibraryOriginalImports12
¬expand $LibraryOriginalImports12
¬dd $FNLib - $ImageBase
¬comment down level 1
¬
¬comment level 1
¬linedef $LibraryThunkImports13
¬expand $LibraryThunkImports13
¬define \02_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib - $ImageBase
¬comment down level 1
¬
¬comment level 1
¬linedef $LibraryFunctionsImports14
¬expand $LibraryFunctionsImports14
¬define $FNLib ¬curpos + $ImageBase + $RVABase
¬db 0,0,'\01',0
¬comment down level 1
¬
¬comment down level 0


¬linedef import *
import \01 as \01
¬comment down level 0


¬linedef GetModuleHandleA(*)
pushpar \01
call [GetModuleHandleA_ADDR]
¬comment down level 0


¬linedef $LibraryOriginalImports4
¬dd $FNLib7 - $ImageBase
¬comment down level 0
¬dd $FNLib8 - $ImageBase
¬comment down level 0


¬linedef $LibraryThunkImports5
¬define GetModuleHandleA_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib7 - $ImageBase
¬comment down level 0
¬define ExitProcess_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib8 - $ImageBase
¬comment down level 0


¬linedef $LibraryFunctionsImports6
¬define $FNLib7 ¬curpos + $ImageBase + $RVABase
¬db 0,0,'GetModuleHandleA',0
¬comment down level 0
¬define $FNLib8 ¬curpos + $ImageBase + $RVABase
¬db 0,0,'ExitProcess',0
¬comment down level 0


¬linedef ExitProcess(*)
pushpar \01
call [ExitProcess_ADDR]
¬comment down level 0


¬linedef DialogBoxParamA(*)
pushpar \01
call [DialogBoxParamA_ADDR]
¬comment down level 0


¬linedef $LibraryOriginalImports12
¬dd $FNLib15 - $ImageBase
¬comment down level 0
¬dd $FNLib16 - $ImageBase
¬comment down level 0
¬dd $FNLib17 - $ImageBase
¬comment down level 0


¬linedef $LibraryThunkImports13
¬define DialogBoxParamA_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib15 - $ImageBase
¬comment down level 0
¬define MessageBoxA_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib16 - $ImageBase
¬comment down level 0
¬define EndDialog_ADDR ¬curpos + $ImageBase + $RVABase
¬dd $FNLib17 - $ImageBase
¬comment down level 0


¬linedef $LibraryFunctionsImports14
¬define $FNLib15 ¬curpos + $ImageBase + $RVABase
¬db 0,0,'DialogBoxParamA',0
¬comment down level 0
¬define $FNLib16 ¬curpos + $ImageBase + $RVABase
¬db 0,0,'MessageBoxA',0
¬comment down level 0
¬define $FNLib17 ¬curpos + $ImageBase + $RVABase
¬db 0,0,'EndDialog',0
¬comment down level 0


¬linedef MessageBoxA(*)
pushpar \01
call [MessageBoxA_ADDR]
¬comment down level 0


¬linedef EndDialog(*)
pushpar \01
call [EndDialog_ADDR]
¬comment down level 0


¬linedef FormMiPrimerDialogo.Show
¬comment down level 0


¬linedef Caption = *
¬comment level 1
¬linedef $Caption32
¬dw \01,0
¬comment down level 1
¬
¬comment down level 0


¬linedef ClientLeft = *
¬define $ClientLeft18 \01/15
¬comment down level 0


¬linedef ClientTop = *
¬define $ClientTop19 \01/15
¬comment down level 0


¬linedef ClientWidth = *
¬define $ClientWidth20 \01/15
¬comment down level 0


¬linedef ClientHeight = *
¬define $ClientHeight21 \01/15
¬comment down level 0


¬linedef EndDialog
¬dd &H80C800C0
¬dd 0 ¬comment ExStyle
¬dw $DialogItems ¬comment items,
¬dw $ClientLeft18,$ClientTop19,$ClientWidth20,$ClientHeight21 ¬comment x,y,cx,cy~
¬dd 0
$FormCaption22
¬dw 8,'MS Sans Serif',0 ¬comment ;Fontsize, FontName
align 4
$EndControls
¬define FormMiPrimerDialogo_Size ¬curpos + $RVABase - FormMiPrimerDialogo
¬comment down level 0


¬linedef $EndControls
¬comment down level 0
¬dd $Style
¬dd 0 ¬comment ExStyle
¬dw $Left23,$Top24,$Width25,$Height26 ¬comment x,y,cx,cy
¬dw -1 ;ID
¬dw -1, &H82 ¬comment STATIC
$Caption27
¬dw 0
align 4
¬comment down level 0
¬dd $Style
¬dd 0 ¬comment ExStyle
¬dw $Left28,$Top29,$Width30,$Height31 ¬comment x,y,cx,cy
¬dw -1 ;ID
¬dw -1, &H82 ¬comment STATIC
$Caption32
¬dw 0
align 4
¬comment down level 0


¬linedef $FormCaption22
¬dw "Mi primer diálogo parametrizado",0
¬comment down level 0


¬linedef Left = *
¬define $Left28 \01/15
¬comment down level 0


¬linedef Top = *
¬define $Top29 \01/15
¬comment down level 0


¬linedef Width = *
¬define $Width30 \01/15
¬comment down level 0


¬linedef Height = *
¬define $Height31 \01/15
¬comment down level 0


¬linedef End
¬comment level 1
¬linedef $EndControls
¬expand $EndControls
¬dd $Style
¬dd 0 ¬comment ExStyle
¬dw $Left28,$Top29,$Width30,$Height31 ¬comment x,y,cx,cy
¬dw -1 ;ID
¬dw -1, &H82 ¬comment STATIC
$Caption32
¬dw 0
align 4
¬comment down level 1
¬
¬define $DialogItems $DialogItems + 1
¬comment down level 0


¬linedef $Caption27
¬dw "Etiqueta",0
¬comment down level 0


¬linedef $Caption32
¬dw "Contexto",0
¬comment down level 0


¬linedef Main(*)
pushpar \01
call [Main_ADDR]
¬comment down level 0


¬linedef hMod = *
= \01
¬db &H89,&H45,$temp33 ¬comment mov dword [ebp-x],eax
¬define $temp33_last ¬curpos
¬comment down level 0


¬linedef hMod
¬comment level 1
¬if $temp33_last <> ¬curpos
¬db &H8B,&H45,$temp33 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0


¬linedef else


¬linedef end if


¬linedef $data_definitions
$temp36: db "Cabecera",0
¬comment down level 0
$temp37: db "Prueba",0
¬comment down level 0


¬linedef hwnddlg = *
= \01
¬db &H89,&H45,$temp38 ¬comment mov dword [ebp-x],eax
¬define $temp38_last ¬curpos
¬comment down level 0


¬linedef hwnddlg
¬comment level 1
¬if $temp38_last <> ¬curpos
¬db &H8B,&H45,$temp38 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0


¬linedef msg = *
= \01
¬db &H89,&H45,$temp39 ¬comment mov dword [ebp-x],eax
¬define $temp39_last ¬curpos
¬comment down level 0


¬linedef msg
¬comment level 1
¬if $temp39_last <> ¬curpos
¬db &H8B,&H45,$temp39 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0


¬linedef wparam = *
= \01
¬db &H89,&H45,$temp40 ¬comment mov dword [ebp-x],eax
¬define $temp40_last ¬curpos
¬comment down level 0


¬linedef wparam
¬comment level 1
¬if $temp40_last <> ¬curpos
¬db &H8B,&H45,$temp40 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0


¬linedef lparam = *
= \01
¬db &H89,&H45,$temp41 ¬comment mov dword [ebp-x],eax
¬define $temp41_last ¬curpos
¬comment down level 0


¬linedef lparam
¬comment level 1
¬if $temp41_last <> ¬curpos
¬db &H8B,&H45,$temp41 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0


¬linedef DialogProc(*)
pushpar \01
call [DialogProc_ADDR]
¬comment down level 0


¬linedef var1 = *
= \01
¬db &H89,&H45,$temp42 ¬comment mov dword [ebp-x],eax
¬define $temp42_last ¬curpos
¬comment down level 0


¬linedef var1
¬comment level 1
¬if $temp42_last <> ¬curpos
¬db &H8B,&H45,$temp42 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0


¬linedef var2 = *
= \01
¬db &H89,&H45,$temp43 ¬comment mov dword [ebp-x],eax
¬define $temp43_last ¬curpos
¬comment down level 0


¬linedef var2
¬comment level 1
¬if $temp43_last <> ¬curpos
¬db &H8B,&H45,$temp43 ¬comment mov eax,dword [ebp-x]
¬comment down level 1
¬
¬comment down level 0



